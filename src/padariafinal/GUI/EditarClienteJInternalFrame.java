/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package padariafinal.GUI;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import padariafinal.DB.ClienteDB;
import padariafinal.MODEL.Cliente;

/**
 *
 * @author pa-to
 */
public class EditarClienteJInternalFrame extends javax.swing.JInternalFrame {
    DefaultTableModel modelClienteTable = new DefaultTableModel(){
        public boolean isCellEditable(int row, int column){
            if (column==0){
                JOptionPane.showMessageDialog(null, "Esse valor nao Ã© editavel!");
                return false;
                
            }
            return true;
        }
    };
    
    /**
     * Creates new form EditarClienteJInternalFrame
     */
    public EditarClienteJInternalFrame() {
        initComponents();
        loadClienteTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        clientesTable = new javax.swing.JTable();
        editarBtn = new javax.swing.JButton();
        fecharBtn = new javax.swing.JButton();

        setClosable(true);
        setResizable(true);
        setTitle("Editar Cliente");

        clientesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(clientesTable);

        editarBtn.setText("Editar");
        editarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarBtnActionPerformed(evt);
            }
        });

        fecharBtn.setText("Fechar");
        fecharBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fecharBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editarBtn)
                .addGap(18, 18, 18)
                .addComponent(fecharBtn)
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editarBtn)
                    .addComponent(fecharBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fecharBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fecharBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_fecharBtnActionPerformed

    private void editarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarBtnActionPerformed
      int linhaSelecionadaClientes = clientesTable.getSelectedRow();
      
      if(linhaSelecionadaClientes==-1){
           JOptionPane.showMessageDialog(rootPane, "Selecione um Cliente da tabela!");
        return;  
      }
          
      
      int idCliente = (int) clientesTable.getValueAt(linhaSelecionadaClientes, 0);
      String nome = (String) clientesTable.getValueAt(linhaSelecionadaClientes, 1);
      String CPF = (String) clientesTable.getValueAt(linhaSelecionadaClientes, 2);
      String email = (String) clientesTable.getValueAt(linhaSelecionadaClientes,3);
      
      
      
      Cliente cliente = new Cliente(idCliente,nome,CPF, email );
      ClienteDB clienteDB = new ClienteDB();
      if(clienteDB.update(cliente)){
          JOptionPane.showMessageDialog(rootPane, "Cliente atualizado com sucesso!");
          clientesTable.clearSelection();
      }else{
          JOptionPane.showMessageDialog(rootPane, "Houve um problema em atualizar os dados!");
      }
      
      
    }//GEN-LAST:event_editarBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable clientesTable;
    private javax.swing.JButton editarBtn;
    private javax.swing.JButton fecharBtn;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void loadClienteTable() {
        modelClienteTable.addColumn("IdCliente");
        modelClienteTable.addColumn("Nome");
        modelClienteTable.addColumn("CPF");
        modelClienteTable.addColumn("Email");
        
        ClienteDB clienteDB=new ClienteDB();
        ArrayList<Cliente> clientes = clienteDB.getClientes();
        
        for(int i=0;i<clientes.size();i++){
            Cliente cliente = (Cliente) clientes.get(i);
            int idCliente = cliente.getIdCliente();
            String nome = cliente.getNome();
            String email=cliente.getEmail();
            String CPF=cliente.getCPF();
            
            modelClienteTable.addRow(new Object[]{idCliente,nome,email,CPF });
        }
        clientesTable.setModel(modelClienteTable);
        jScrollPane1.setViewportView(clientesTable);
    }
}
