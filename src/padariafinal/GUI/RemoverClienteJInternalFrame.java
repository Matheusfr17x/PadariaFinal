/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package padariafinal.GUI;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import padariafinal.DB.ClienteDB;
import padariafinal.MODEL.Cliente;

/**
 *
 * @author pa-to
 */
public class RemoverClienteJInternalFrame extends javax.swing.JInternalFrame {

    DefaultTableModel modelClienteTable = new DefaultTableModel() {
        public boolean isCellEditable(int row, int column) {

            return false;
        }
    };

    /**
     * Creates new form RemoverClienteJInternalFrame
     */
    public RemoverClienteJInternalFrame() {
        initComponents();
        loadClienteTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        clientesTable = new javax.swing.JTable();
        fecharBtn = new javax.swing.JButton();
        removerBtn = new javax.swing.JButton();

        setClosable(true);
        setResizable(true);
        setTitle("Remover Cliente");

        clientesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(clientesTable);

        fecharBtn.setText("Fechar");
        fecharBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fecharBtnActionPerformed(evt);
            }
        });

        removerBtn.setText("Remover");
        removerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(removerBtn)
                        .addGap(18, 18, 18)
                        .addComponent(fecharBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fecharBtn)
                    .addComponent(removerBtn))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void removerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerBtnActionPerformed
        int linhaSelecionadaClientes = clientesTable.getSelectedRow();

        if (linhaSelecionadaClientes == -1) {
            JOptionPane.showMessageDialog(rootPane, "Selecione um Cliente da tabela!");
            return;
        }

        int idCliente = (int) clientesTable.getValueAt(linhaSelecionadaClientes, 0);

        ClienteDB clienteDB = new ClienteDB();
        if (clienteDB.hasVenda(idCliente)) {
            int res = JOptionPane.showConfirmDialog(rootPane, "Este cliente possui uma ou mais vendas, exclua suas vendas para poder excluir o cliente");
            if (res == JOptionPane.YES_OPTION) {
                if (clienteDB.delete(idCliente)) {
                    JOptionPane.showMessageDialog(rootPane, "Cliente Removido com sucesso!");
                    modelClienteTable.removeRow(linhaSelecionadaClientes);
                    clientesTable.setModel(modelClienteTable);
                    jScrollPane1.setViewportView(clientesTable);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Houve um problema em Remover os dados!");
                }

            }
        } else {
            if (clienteDB.delete(idCliente)) {
                JOptionPane.showMessageDialog(rootPane, "Cliente Removido com sucesso!");
                modelClienteTable.removeRow(linhaSelecionadaClientes);
                clientesTable.setModel(modelClienteTable);
                jScrollPane1.setViewportView(clientesTable);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Houve um problema em Remover os dados!");
            }
        }

    }//GEN-LAST:event_removerBtnActionPerformed

    private void fecharBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fecharBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_fecharBtnActionPerformed

    private void loadClienteTable() {
        modelClienteTable.addColumn("IdCliente");
        modelClienteTable.addColumn("Nome");
        modelClienteTable.addColumn("CPF");
        modelClienteTable.addColumn("Email");

        ClienteDB clienteDB = new ClienteDB();
        ArrayList<Cliente> clientes = clienteDB.getClientes();

        for (int i = 0; i < clientes.size(); i++) {
            Cliente cliente = (Cliente) clientes.get(i);
            int idCliente = cliente.getIdCliente();
            String nome = cliente.getNome();
            String email = cliente.getEmail();
            String CPF = cliente.getCPF();

            modelClienteTable.addRow(new Object[]{idCliente, nome, email, CPF});
        }
        clientesTable.setModel(modelClienteTable);
        jScrollPane1.setViewportView(clientesTable);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable clientesTable;
    private javax.swing.JButton fecharBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removerBtn;
    // End of variables declaration//GEN-END:variables
}
