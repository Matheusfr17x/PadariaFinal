/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package padariafinal.GUI;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import padariafinal.DB.ClienteDB;
import padariafinal.DB.ProdutoDB;
import padariafinal.DB.VendaDB;
import padariafinal.MODEL.Cliente;
import padariafinal.MODEL.Produto;
import padariafinal.MODEL.Venda;

/**
 *
 * @author pa-to
 */
public class EditarVendaJInternalFrame extends javax.swing.JInternalFrame {

    
     DefaultTableModel modelVendaTable = new DefaultTableModel(){
        public boolean isCellEditable(int row, int column){
            // id cliente e id produto
            if (column==0 || column==2){
                JOptionPane.showMessageDialog(null, "Esse valor nao Ã© editavel!");
                return false;
                
            }
            
            //nome cliente 
            if (column==1){
                JOptionPane.showMessageDialog(null, "Esse calor nao e editavel nesta janela!\n");
                return false;
            }
            //nome produto e valor  
            if (column==3 || column==6){
                JOptionPane.showMessageDialog(null, "Esse calor nao e editavel nesta janela!\n");
                return false;
            }
            return true;
        }
    };
    /**
     * Creates new form EditarVendaJInternalFrame
     */
    public EditarVendaJInternalFrame() {
        initComponents();
        loadTableVendas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        vendasTable = new javax.swing.JTable();
        fecharBtn = new javax.swing.JButton();
        editarBtn = new javax.swing.JButton();

        setClosable(true);
        setResizable(true);
        setTitle("Editar Venda");

        vendasTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(vendasTable);

        fecharBtn.setText("Fechar");
        fecharBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fecharBtnActionPerformed(evt);
            }
        });

        editarBtn.setText("Editar");
        editarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(editarBtn)
                        .addGap(18, 18, 18)
                        .addComponent(fecharBtn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fecharBtn)
                    .addComponent(editarBtn))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fecharBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fecharBtnActionPerformed
      this.dispose();
    }//GEN-LAST:event_fecharBtnActionPerformed

    private void editarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarBtnActionPerformed
        int linhaSelecionadaVendas=vendasTable.getSelectedRow();
        int idCliente = (int) vendasTable.getValueAt(linhaSelecionadaVendas, 0);
        int idProduto = (int) vendasTable.getValueAt(linhaSelecionadaVendas, 2);
        int qtde = (int) Integer.parseInt((String) vendasTable.getValueAt(linhaSelecionadaVendas, 4));
        String data= (String) vendasTable.getValueAt(linhaSelecionadaVendas, 5);
        Venda venda = new Venda(idCliente, idProduto,data,qtde);
        
        VendaDB vendaDB = new VendaDB();
        if(vendaDB.update(venda)){
            JOptionPane.showMessageDialog(rootPane, "Venda Atualizada com sucesso!");
            vendasTable.clearSelection();
        }else{
             JOptionPane.showMessageDialog(rootPane, "Erro ao atualizar venda!");
        }
        
    }//GEN-LAST:event_editarBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton editarBtn;
    private javax.swing.JButton fecharBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable vendasTable;
    // End of variables declaration//GEN-END:variables

    private void loadTableVendas() {
        modelVendaTable.addColumn("idCliente"); //0
        modelVendaTable.addColumn("Nome Cliente"); //1
        modelVendaTable.addColumn("idProduto"); //2
        modelVendaTable.addColumn("Nome Produto"); //3
        modelVendaTable.addColumn("Quantidade"); //4
        modelVendaTable.addColumn("Data");//5
         modelVendaTable.addColumn("Valor"); //6
         
         VendaDB  vendaDB= new VendaDB();
         ArrayList<Venda> vendas = vendaDB.getVendas();
         for(int i=0; i<vendas.size();i++){
             Venda venda= (Venda) vendas.get(i);
             int idCliente = venda.getIdCliente();
             int idProduto = venda.getIdProduto();
             String data= venda.getData();
             int quantidade=venda.getQuantidade();
             
             ProdutoDB produtoDB = new ProdutoDB();
             Produto produto = produtoDB.getProduto(idProduto);
             
             ClienteDB clienteDB = new ClienteDB();
             Cliente cliente = clienteDB.getCliente(idCliente);
             
             modelVendaTable.addRow(new Object[]{
             idCliente, cliente.getNome(), idProduto, produto.getNome(), quantidade, data, String.valueOf(produto.getPreco()*quantidade)
             
             });

         }
            vendasTable.setModel(modelVendaTable);
            jScrollPane1.setViewportView(vendasTable);
    }
}
